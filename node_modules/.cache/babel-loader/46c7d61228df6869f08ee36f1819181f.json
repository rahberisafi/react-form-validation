{"ast":null,"code":"var _jsxFileName = \"/home/isafi/ReactPro/react-all/jan2022/react-form/src/components/Form.js\";\nimport React from 'react';\nimport Input from './Input';\nimport Select from './Select';\nimport Radio from './Radio';\nimport Textarea from './Textarea';\nimport Checkbox from './Checkbox';\nimport Button from './Button';\nimport useForm from '../hooks/useForm';\nimport validate from '../utils/validate';\nconst initialState = {\n  name: {\n    value: '',\n    required: true\n  },\n  email: {\n    value: '',\n    required: true,\n    requiredMessage: 'Email address is required!',\n    email: true,\n    emailMessage: 'Email address is not valid!'\n  },\n  password: {\n    value: '',\n    required: true,\n    minLength: 6,\n    minLengthMessage: 'Password must be at least 6 characters long!',\n    maxLength: 16,\n    maxLengthMessage: 'Too many characters!'\n  },\n  confirmPassword: {\n    value: '',\n    required: true,\n    matchWith: 'password',\n    matchWithMessage: 'Password values must be equal!'\n  },\n  gender: {\n    value: '',\n    required: true\n  },\n  difficulty: {\n    value: '',\n    required: true\n  },\n  image: {\n    value: {},\n    required: true,\n    file: true,\n    allowedTypes: ['jpg', 'jpeg', 'png', 'gif'],\n    maxFileSize: 1024\n  },\n  description: {\n    value: ''\n  },\n  terms: {\n    value: false,\n    required: true,\n    requiredMessage: 'You need to accept our Terms and Conditions!'\n  }\n};\n\nconst Form = () => {\n  const {\n    formData,\n    errors,\n    changeHandler,\n    setErrors\n  } = useForm(initialState, validate);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let formErrors = validate(formData, true);\n    setErrors(formErrors);\n\n    if (Object.keys(formErrors).length === 0) {\n      const data = new FormData();\n      data.append('name', formData.name.value);\n      data.append('email', formData.email.value);\n      data.append('password', formData.password.value);\n      data.append('gender', formData.gender.value);\n      data.append('difficulty', formData.difficulty.value);\n      data.append('image', formData.image.value);\n      data.append('description', formData.description.value);\n      data.append('terms', formData.terms.value);\n      console.log('form can be submitted now...');\n\n      for (let pair of data.entries()) {\n        console.log(`${pair[0]}: ${pair[1]}`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Full Name\",\n    name: \"name\",\n    id: \"name\",\n    value: formData.name.value,\n    onChange: changeHandler,\n    error: errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    value: formData.email.value,\n    onChange: changeHandler,\n    error: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    id: \"password\",\n    value: formData.password.value,\n    onChange: changeHandler,\n    error: errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    id: \"confirmPassword\",\n    value: formData.confirmPassword.value,\n    onChange: changeHandler,\n    error: errors.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    label: \"Gender\",\n    name: \"gender\",\n    onChange: changeHandler,\n    choices: [{\n      id: 'female',\n      label: 'Female',\n      value: 'female'\n    }, {\n      id: 'male',\n      label: 'Male',\n      value: 'male'\n    }],\n    error: errors.gender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    label: \"Difficulty\",\n    name: \"difficulty\",\n    id: \"difficulty\",\n    options: [{\n      label: 'Please select a difficulty',\n      value: ''\n    }, {\n      label: 'Easy',\n      value: 'easy'\n    }, {\n      label: 'Medium',\n      value: 'medium'\n    }, {\n      label: 'Hard',\n      value: 'hard'\n    }],\n    value: formData.difficulty.value,\n    onChange: changeHandler,\n    error: errors.difficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    label: \"Image\",\n    name: \"image\",\n    id: \"image\",\n    onChange: changeHandler,\n    error: errors.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Textarea, {\n    id: \"description\",\n    name: \"description\",\n    label: \"Description\",\n    value: formData.description.value,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Terms and conditions\",\n    id: \"terms\",\n    name: \"terms\",\n    value: formData.terms.value,\n    onChange: changeHandler,\n    error: errors.terms,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    title: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/isafi/ReactPro/react-all/jan2022/react-form/src/components/Form.js"],"names":["React","Input","Select","Radio","Textarea","Checkbox","Button","useForm","validate","initialState","name","value","required","email","requiredMessage","emailMessage","password","minLength","minLengthMessage","maxLength","maxLengthMessage","confirmPassword","matchWith","matchWithMessage","gender","difficulty","image","file","allowedTypes","maxFileSize","description","terms","Form","formData","errors","changeHandler","setErrors","submitHandler","e","preventDefault","formErrors","Object","keys","length","data","FormData","append","console","log","pair","entries","id","label"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Input from './Input';\nimport Select from './Select';\nimport Radio from './Radio';\nimport Textarea from './Textarea';\nimport Checkbox from './Checkbox';\nimport Button from './Button';\n\nimport useForm from '../hooks/useForm';\nimport validate from '../utils/validate';\n\nconst initialState = {\n  name: {\n    value: '',\n    required: true\n  },\n  email: {\n    value: '',\n    required: true,\n    requiredMessage: 'Email address is required!',\n    email: true,\n    emailMessage: 'Email address is not valid!'\n  },\n  password: {\n    value: '',\n    required: true,\n    minLength: 6,\n    minLengthMessage: 'Password must be at least 6 characters long!',\n    maxLength: 16,\n    maxLengthMessage: 'Too many characters!'\n  },\n  confirmPassword: {\n    value: '',\n    required: true,\n    matchWith: 'password',\n    matchWithMessage: 'Password values must be equal!'\n  },\n  gender: {\n    value: '',\n    required: true\n  },\n  difficulty: {\n    value: '',\n    required: true\n  },\n  image: {\n    value: {},\n    required: true,\n    file: true,\n    allowedTypes: ['jpg', 'jpeg', 'png', 'gif'],\n    maxFileSize: 1024\n  },\n  description: {\n    value: ''\n  },\n  terms: {\n    value: false,\n    required: true,\n    requiredMessage: 'You need to accept our Terms and Conditions!'\n  }\n}\n\nconst Form = () => {\n  const { formData, errors, changeHandler, setErrors } = useForm(initialState, validate);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let formErrors = validate(formData, true);\n    setErrors(formErrors);\n\n    if(Object.keys(formErrors).length === 0) {\n      const data = new FormData();\n      data.append('name', formData.name.value);\n      data.append('email', formData.email.value);\n      data.append('password', formData.password.value);\n      data.append('gender', formData.gender.value);\n      data.append('difficulty', formData.difficulty.value);\n      data.append('image', formData.image.value);\n      data.append('description', formData.description.value);\n      data.append('terms', formData.terms.value);\n\n      console.log('form can be submitted now...');\n      for(let pair of data.entries()) {\n        console.log(`${pair[0]}: ${pair[1]}`);\n      }\n    }\n  }\n\n  return(\n    <div className=\"container\">\n      <form className=\"form\" onSubmit={submitHandler}>\n        <Input \n          label=\"Full Name\"\n          name=\"name\"\n          id=\"name\"\n          value={formData.name.value}\n          onChange={changeHandler}\n          error={errors.name}\n        />\n        <Input \n          label=\"Email\"\n          name=\"email\"\n          id=\"email\"\n          value={formData.email.value}\n          onChange={changeHandler}\n          error={errors.email}\n        />\n        <Input \n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          id=\"password\"\n          value={formData.password.value}\n          onChange={changeHandler}\n          error={errors.password}\n        />\n        <Input \n          type=\"password\"\n          label=\"Confirm Password\"\n          name=\"confirmPassword\"\n          id=\"confirmPassword\"\n          value={formData.confirmPassword.value}\n          onChange={changeHandler}\n          error={errors.confirmPassword}\n        />\n        <Radio \n          label=\"Gender\"\n          name=\"gender\"\n          onChange={changeHandler}\n          choices={[\n            { id: 'female', label: 'Female', value: 'female' },\n            { id: 'male', label: 'Male', value: 'male' }\n          ]}\n          error={errors.gender}\n        />\n        <Select \n          label=\"Difficulty\"\n          name=\"difficulty\"\n          id=\"difficulty\"\n          options={[\n            { label: 'Please select a difficulty', value: '' },\n            { label: 'Easy', value: 'easy' },\n            { label: 'Medium', value: 'medium' },\n            { label: 'Hard', value: 'hard' }\n          ]}\n          value={formData.difficulty.value}\n          onChange={changeHandler}\n          error={errors.difficulty}\n        />\n        <Input \n          type=\"file\"\n          label=\"Image\"\n          name=\"image\"\n          id=\"image\"\n          onChange={changeHandler}\n          error={errors.image}\n        />\n        <Textarea \n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          value={formData.description.value}\n          onChange={changeHandler}\n        />\n        <Checkbox \n          label=\"Terms and conditions\"\n          id=\"terms\"\n          name=\"terms\"\n          value={formData.terms.value}\n          onChange={changeHandler}\n          error={errors.terms}\n        />\n        <Button type=\"submit\" title=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}