{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nconst useForm = (initialState, validate) => {\n  const [formData, setFormData] = useState(initialState);\n  const [errors, setErrors] = useState({}); // Set form data and errors\n\n  const setDataAndErrors = useCallback(data => {\n    setFormData(data);\n    const errors = validate(data);\n    setErrors(errors);\n  }, [validate]); // Change inputs handler\n\n  const changeHandler = useCallback(e => {\n    let updatedData;\n\n    if (e.target.tagName === 'INPUT' && e.target.type === 'checkbox') {\n      updatedData = { ...formData,\n        [e.target.name]: { ...formData[e.target.name],\n          value: e.target.checked,\n          touched: true\n        }\n      };\n    } else if (e.target.tagName === 'INPUT' && e.target.type === 'file') {\n      updatedData = { ...formData,\n        [e.target.name]: { ...formData[e.target.name],\n          value: e.target.files,\n          touched: true\n        }\n      };\n    } else {\n      updatedData = { ...formData,\n        [e.target.name]: { ...formData[e.target.name],\n          value: e.target.value,\n          touched: true\n        }\n      };\n    }\n\n    setDataAndErrors(updatedData);\n  }, [setDataAndErrors, formData]);\n  return {\n    formData,\n    errors,\n    changeHandler,\n    setErrors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/home/isafi/ReactPro/react-all/jan2022/react-form/src/hooks/useForm.js"],"names":["useState","useCallback","useForm","initialState","validate","formData","setFormData","errors","setErrors","setDataAndErrors","data","changeHandler","e","updatedData","target","tagName","type","name","value","checked","touched","files"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,CAACC,YAAD,EAAeC,QAAf,KAA4B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,YAAD,CAAxC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAF0C,CAI1C;;AACA,QAAMS,gBAAgB,GAAGR,WAAW,CAAES,IAAD,IAAU;AAC7CJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AAEA,UAAMH,MAAM,GAAGH,QAAQ,CAACM,IAAD,CAAvB;AAEAF,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GANmC,EAMjC,CAACH,QAAD,CANiC,CAApC,CAL0C,CAa1C;;AACA,QAAMO,aAAa,GAAGV,WAAW,CAAEW,CAAD,IAAO;AACvC,QAAIC,WAAJ;;AAEA,QAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,KAAqB,OAArB,IAAgCH,CAAC,CAACE,MAAF,CAASE,IAAT,KAAkB,UAArD,EAAiE;AAC/DH,MAAAA,WAAW,GAAG,EACZ,GAAGR,QADS;AAEZ,SAACO,CAAC,CAACE,MAAF,CAASG,IAAV,GAAiB,EACf,GAAGZ,QAAQ,CAACO,CAAC,CAACE,MAAF,CAASG,IAAV,CADI;AAEfC,UAAAA,KAAK,EAAEN,CAAC,CAACE,MAAF,CAASK,OAFD;AAGfC,UAAAA,OAAO,EAAE;AAHM;AAFL,OAAd;AAQD,KATD,MASM,IAAGR,CAAC,CAACE,MAAF,CAASC,OAAT,KAAqB,OAArB,IAAgCH,CAAC,CAACE,MAAF,CAASE,IAAT,KAAkB,MAArD,EAA6D;AACjEH,MAAAA,WAAW,GAAG,EACZ,GAAGR,QADS;AAEZ,SAACO,CAAC,CAACE,MAAF,CAASG,IAAV,GAAiB,EACf,GAAGZ,QAAQ,CAACO,CAAC,CAACE,MAAF,CAASG,IAAV,CADI;AAEfC,UAAAA,KAAK,EAAEN,CAAC,CAACE,MAAF,CAASO,KAFD;AAGfD,UAAAA,OAAO,EAAE;AAHM;AAFL,OAAd;AAQD,KATK,MASA;AACJP,MAAAA,WAAW,GAAG,EACZ,GAAGR,QADS;AAEZ,SAACO,CAAC,CAACE,MAAF,CAASG,IAAV,GAAiB,EACf,GAAGZ,QAAQ,CAACO,CAAC,CAACE,MAAF,CAASG,IAAV,CADI;AAEfC,UAAAA,KAAK,EAAEN,CAAC,CAACE,MAAF,CAASI,KAFD;AAGfE,UAAAA,OAAO,EAAE;AAHM;AAFL,OAAd;AAQD;;AAEDX,IAAAA,gBAAgB,CAACI,WAAD,CAAhB;AAED,GAlCgC,EAkC9B,CAACJ,gBAAD,EAAmBJ,QAAnB,CAlC8B,CAAjC;AAoCA,SAAO;AACLA,IAAAA,QADK;AACKE,IAAAA,MADL;AACaI,IAAAA,aADb;AAC4BH,IAAAA;AAD5B,GAAP;AAGD,CArDD;;AAuDA,eAAeN,OAAf","sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useForm = (initialState, validate) => {\n  const [formData, setFormData] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  // Set form data and errors\n  const setDataAndErrors = useCallback((data) => {\n    setFormData(data);\n\n    const errors = validate(data);\n\n    setErrors(errors);\n  }, [validate]);\n\n  // Change inputs handler\n  const changeHandler = useCallback((e) => {\n    let updatedData;\n\n    if(e.target.tagName === 'INPUT' && e.target.type === 'checkbox') {\n      updatedData = {\n        ...formData,\n        [e.target.name]: {\n          ...formData[e.target.name],\n          value: e.target.checked,\n          touched: true\n        }\n      }\n    }else if(e.target.tagName === 'INPUT' && e.target.type === 'file') {\n      updatedData = {\n        ...formData,\n        [e.target.name]: {\n          ...formData[e.target.name],\n          value: e.target.files,\n          touched: true\n        }\n      }\n    }else {\n      updatedData = {\n        ...formData,\n        [e.target.name]: {\n          ...formData[e.target.name],\n          value: e.target.value,\n          touched: true\n        }\n      }\n    }\n\n    setDataAndErrors(updatedData);\n\n  }, [setDataAndErrors, formData]);\n\n  return {\n    formData, errors, changeHandler, setErrors\n  }\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}